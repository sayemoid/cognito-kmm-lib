[versions]
nexus-publish = "2.0.0"
agp = "8.2.2"
android-minSdk = "24"
android-compileSdk = "34"
android-targetSdk = "34"
androidx-core-ktx = "1.13.1"
jdk = "17"
kotlin = "2.0.20"
junit = "4.13.2"
arrow = "1.2.4"

# KotlinX
kotlinxDateTime = "0.6.1"
krossbowStompCore = "5.12.0"
krossbowStompKxserialization = "5.7.0"
serializationVersion = "1.6.3"

ktor = "2.3.12"
koin = "4.0.0"
dataStore = "1.1.1"
kermit = "2.0.4"
kermit-stately="2.1.0"

sentry = "0.1.1"

[libraries]

nexus-publish = { module = "io.github.gradle-nexus.publish-plugin:io.github.gradle-nexus.publish-plugin.gradle.plugin", version.ref = "nexus-publish" }

# Kotlin
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

# KotlinX
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serializationVersion" }

#Arrow
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }

# Logging
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kermit-stately = { module = "co.touchlab:stately-common", version.ref = "kermit-stately" }

# ktor
krossbow-stomp-kxserialization = { module = "org.hildan.krossbow:krossbow-stomp-kxserialization-json", version.ref = "krossbowStompKxserialization" }
ktor = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

# krossbrow STOMP client
krossbow-stomp-core = { module = "org.hildan.krossbow:krossbow-stomp-core", version.ref = "krossbowStompCore" }
krossbow-websocket-ktor = { module = "org.hildan.krossbow:krossbow-websocket-ktor", version.ref = "krossbowStompCore" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

# DataStore
datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "dataStore" }

### Android Specific
sentry-kotlin-multiplatform = { module = "io.sentry:sentry-kotlin-multiplatform", version.ref = "sentry" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }

### IOS Specific
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }


[plugins]
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
